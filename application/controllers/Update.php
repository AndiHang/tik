<?php
/*   ________________________________________
    |                 GarudaCBT              |
    |    https://github.com/garudacbt/cbt    |
    |________________________________________|
*/
 defined("\x42\x41\x53\x45\120\x41\124\x48") or exit("\116\157\x20\x64\151\x72\x65\x63\x74\40\163\x63\162\151\160\x74\40\141\x63\x63\145\x73\x73\40\141\154\154\157\x77\145\144"); class Update extends CI_Controller { function __construct() { goto bBPHS; iyGvD: $this->load->database(); goto Ga1mp; bBPHS: parent::__construct(); goto PVy4P; PVy4P: include APPPATH . "\143\157\x6e\x66\x69\x67\x2f\144\141\x74\141\x62\x61\x73\145\56\x70\150\160"; goto rjAxs; rjAxs: $this->load->dbforge(); goto iyGvD; Ga1mp: $this->load->library("\x65\156\x63\x72\x79\160\x74\x69\x6f\x6e"); goto r_fZ2; r_fZ2: } public function output_json($data, $encode = true) { goto HBNVh; tT2q9: $this->output->set_content_type("\x61\x70\x70\x6c\151\x63\x61\164\151\x6f\x6e\x2f\x6a\x73\157\156")->set_output($data); goto BzRj6; HBNVh: if (!$encode) { goto c5Szr; } goto BB0cs; R364d: c5Szr: goto tT2q9; BB0cs: $data = json_encode($data); goto R364d; BzRj6: } public function index() { goto jRUaT; dZSVw: $this->load->view("\x69\156\163\x74\141\154\154\x2f\165\x70\x64\x61\164\145"); goto lR8vU; cL6RT: $data["\x6a\163\x6f\x6e"] = $json; goto GSKiH; p5qRg: $json = (array) $json; goto cL6RT; lR8vU: $this->load->view("\x69\x6e\163\x74\x61\154\154\57\x66\157\157\x74\145\162"); goto KbUgU; jRUaT: $json = file_get_contents("\x2e\57\141\x73\x73\145\x74\163\57\141\x70\160\x2f\x64\142\x2f\x64\x61\x74\141\142\141\163\145\56\x6a\x73\x6f\x6e"); goto WChiP; GSKiH: $this->load->view("\151\156\163\164\x61\x6c\x6c\57\x68\145\141\x64\145\162", $data); goto dZSVw; WChiP: $json = json_decode($json); goto p5qRg; KbUgU: } function object_to_array($data) { goto uSHcT; to5eg: grSnT: goto RheBa; dgwys: $result = []; goto APj2B; p70kB: RuOeU: goto nqGbU; RheBa: return $result; goto p70kB; nqGbU: return $data; goto vDWoq; APj2B: foreach ($data as $key => $value) { $result[$key] = is_array($data) || is_object($data) ? $this->object_to_array($value) : $value; mcmIR: } goto to5eg; uSHcT: if (!(is_array($data) || is_object($data))) { goto RuOeU; } goto dgwys; vDWoq: } public function checkDatabase() { goto ylkue; awUgE: $json = file_get_contents("\x2e\x2f\141\163\x73\x65\164\163\x2f\x61\x70\x70\x2f\x64\x62\57\144\141\164\x61\142\x61\x73\x65\x2e\x6a\x73\x6f\156"); goto HO25G; EUP_H: $counts = count($create_tables) + count($add_columns) + count($edit_columns); goto wFJr5; E7kGX: $tbl_ada = array_keys($fields); goto mtpbJ; HO25G: $json = json_decode($json); goto ZThgq; LEpb_: $create_tables = []; goto SgqLr; ZThgq: $json = (array) $json; goto k7xIM; ETEOM: $fields = []; goto E58Qt; S6vc9: $full_tables = array_unique($full_tables); goto lBfv9; y2p5f: foreach ($tabless as $table) { goto kro1p; AN7VY: WIedW: goto o8TVx; nOcT9: bufG5: goto ABfuc; JPmYa: y2hIC: goto ttntY; M3zfB: $currentDb = FALSE; goto rRpvH; zIoav: goto E_sBD; goto JPmYa; D2ngT: if (!(($query = $this->db->query($sql)) === FALSE)) { goto xpmti; } goto M3zfB; AwVLe: $query = $query->result_object(); goto t_NyX; NDc9f: $sql = "\123\x45\114\105\103\124\40\x60\143\x6f\154\x75\x6d\x6e\x5f\x6e\141\x6d\x65\140\x2c\x20\140\x6e\x75\x6d\x65\162\151\143\137\x70\162\145\143\151\x73\151\x6f\x6e\140\54\40\140\x65\170\x74\x72\141\140\54\x20\x60\x69\163\137\x6e\165\154\154\x61\142\x6c\145\140" . "\40\x46\x52\x4f\x4d\40\140\151\x6e\146\157\x72\x6d\x61\164\151\x6f\x6e\137\163\143\150\x65\x6d\x61\x60\56\x60\x63\157\154\165\x6d\x6e\163\140\x20\127\110\x45\x52\x45\40\x74\141\x62\x6c\145\x5f\x73\143\150\145\155\141\x20\x3d\40\x22" . $this->db->database . "\x22\x20\101\x4e\x44\40\164\x61\x62\x6c\145\x5f\156\141\155\145\40\x3d\x20\42" . $table . "\x22"; goto D2ngT; x2lTA: $datafld[$i]->extra = $query[$i]->extra; goto zIoav; q5I3c: if (!($query[$i]->extra != '')) { goto bufG5; } goto SS2sz; xCmtU: oY23K: goto gLM6o; DAjWA: if (!($i < $c)) { goto oY23K; } goto yWk66; PC4Ek: $retval[$i] = new stdClass(); goto wRLXM; t_NyX: $retval = array(); goto zbJXe; pbk6q: $retval[$i]->extra = $query[$i]->extra; goto AN7VY; k18Oi: kM4hK: goto VO0H2; zbJXe: $i = 0; goto xCcNN; U9WBv: E_sBD: goto nOcT9; wRLXM: $retval[$i]->name = $query[$i]->column_name; goto pbk6q; rRpvH: xpmti: goto AwVLe; gLM6o: $currentDb[$table] = $retval; goto slhSe; yWk66: if (!($datafld[$i]->name == $query[$i]->column_name)) { goto Talyk; } goto q5I3c; o8TVx: $i++; goto XxfSE; ABfuc: Talyk: goto PC4Ek; SS2sz: if ($query[$i]->extra == "\141\165\x74\x6f\x5f\151\156\143\x72\145\155\145\156\x74") { goto y2hIC; } goto x2lTA; xCcNN: $c = count($query); goto hTzrt; hTzrt: PcxC8: goto DAjWA; ttntY: $datafld[$i]->auto_increment = true; goto U9WBv; XxfSE: goto PcxC8; goto xCmtU; kro1p: $datafld = $this->db->field_data($table); goto NDc9f; slhSe: $fields[$table] = $datafld; goto k18Oi; VO0H2: } goto vWtUk; Z5gN1: $edit_columns = []; goto bx9X2; m6mDa: $this->db->db_debug = FALSE; goto b7eKE; lBfv9: sort($full_tables); goto LEpb_; E58Qt: $currentDb = []; goto y2p5f; b7eKE: $tabless = $this->db->list_tables(); goto ETEOM; vWtUk: V0Plf: goto awUgE; mtpbJ: $full_tables = array_merge($tbl_baru, $tbl_ada); goto S6vc9; bx9X2: foreach ($full_tables as $table) { goto J74n0; YbWDH: D2l0n: goto VRUDQ; J74n0: if ($this->db->table_exists($table)) { goto ZKXRE; } goto BBiaF; VRUDQ: zoXz6: goto vYRli; kXdf7: goto zoXz6; goto ZeyCm; WUd3J: if (!isset($json[$table])) { goto D2l0n; } goto LTpme; vYRli: YyPlq: goto FfC3U; ZeyCm: ZKXRE: goto WUd3J; BBiaF: $create_tables[$table] = $json[$table]; goto kXdf7; LTpme: foreach ($json[$table] as $jtbl) { goto rZaHE; GweeJ: ETpV2: goto MCNcM; ed4QA: foreach ($fields[$table] as $ftbl) { goto q9WvA; qTFaU: B7W5J: goto gJ4bG; Yh3ns: if (!($jtbl->default != $ftbl->default || $jtbl->max_length != $ftbl->max_length || $jtbl->type != $ftbl->type)) { goto gKxwg; } goto Nfiix; Nfiix: $edit_columns[$table][] = $jtbl; goto GJu8L; q9WvA: if (!($jtbl->name == $ftbl->name)) { goto n11PD; } goto Yh3ns; Jeke9: n11PD: goto qTFaU; GJu8L: gKxwg: goto Jeke9; gJ4bG: } goto a1kqy; iP8Jg: $add_columns[$table][] = $jtbl; goto RFhEs; RFhEs: goto uPUuz; goto KBCq8; a1kqy: C1SDh: goto PRko_; rZaHE: if ($this->db->field_exists($jtbl->name, $table)) { goto Zj3aE; } goto iP8Jg; KBCq8: Zj3aE: goto ed4QA; PRko_: uPUuz: goto GweeJ; MCNcM: } goto vcLvj; vcLvj: a70xl: goto YbWDH; FfC3U: } goto cxRlZ; cxRlZ: xNSmK: goto EUP_H; ylkue: $db_debug = $this->db->db_debug; goto m6mDa; ImXjK: $this->output_json($data); goto wNrsV; k7xIM: $tbl_baru = array_keys($json); goto E7kGX; SgqLr: $add_columns = []; goto Z5gN1; wFJr5: $data = ["\144\142" => $fields, "\x63\162\x65\141\x74\x65" => $create_tables, "\155\x6f\x64\x69\x66\171" => $edit_columns, "\x61\144\144" => $add_columns, "\x63\x6f\165\x6e\x74\163" => $counts, "\x6a\x73\x6f\156" => $json, "\x63\165\162\162\145\156\164" => $currentDb]; goto ImXjK; wNrsV: } public function updateDatabase() { goto SQAN2; jjIwP: foreach ($tabless as $table) { $fields[$table] = $this->db->field_data($table); TCDtU: } goto wJEvU; mbEhY: $full_tables = array_merge($tbl_baru, $tbl_ada); goto B_mEn; bGBwz: foreach ($full_tables as $table) { goto PkP92; NVSQj: foreach ($json[$table] as $tbl => $jtbl) { goto osA6C; osA6C: $field = [$jtbl->name => ["\x74\x79\160\145" => $jtbl->type, "\x63\157\156\x73\x74\162\141\151\156\x74" => $jtbl->max_length, "\156\x75\x6c\x6c" => $jtbl->primary_key == 0]]; goto g2kQJ; aM2Eh: if (!($jtbl->primary_key == 1)) { goto AnSWr; } goto O6sY1; E0uvh: AnSWr: goto sCn_t; O6sY1: $this->dbforge->add_key($jtbl->name, true); goto E0uvh; g2kQJ: $this->dbforge->add_field($field); goto aM2Eh; sCn_t: kUGrD: goto YReqO; YReqO: } goto rzw2b; Oax0B: ctPjP: goto oJJWS; bBsY0: if (!isset($json[$table])) { goto FiZun; } goto o5Bk3; ji0TF: PIpoo: goto bBsY0; O4r23: $this->dbforge->create_table($table, TRUE); goto T0yfR; GB2gh: FiZun: goto yDzep; PkP92: if ($this->db->table_exists($table)) { goto PIpoo; } goto DAH3u; T0yfR: $this->db->query("\x41\114\x54\105\x52\x20\124\x41\102\x4c\105\x20\x20\140" . $table . "\x60\x20\x45\x4e\x47\111\x4e\x45\x20\75\x20\x49\x6e\x6e\x6f\x44\102"); goto Oax0B; DqeAU: Pf6Pz: goto GB2gh; o5Bk3: foreach ($json[$table] as $jtbl) { goto mj5z3; MX6r1: $this->dbforge->add_key($jtbl->name, true); goto yHRqm; YXwU8: goto tvgeh; goto rDpzF; mj5z3: if ($this->db->field_exists($jtbl->name, $table)) { goto VcaLF; } goto PQ3Ds; OL_HZ: UG9iO: goto lc9fo; o4SqV: $field = array($jtbl->name => array("\164\171\160\x65" => $jtbl->type, "\x63\157\156\x73\x74\162\141\x69\x6e\164" => $jtbl->max_length, "\156\x75\154\x6c" => false)); goto MX6r1; vHR85: ZAV6Q: goto gQWYt; kvm16: $field = array($jtbl->name => array("\164\x79\160\x65" => $jtbl->type, "\143\x6f\x6e\163\164\x72\x61\151\156\x74" => $jtbl->max_length, "\144\145\146\141\x75\x6c\164" => $jtbl->default)); goto c6N8c; lc9fo: tvgeh: goto vHR85; qJ7jz: foreach ($fields[$table] as $ftbl) { goto hpVlo; NG2xr: if ($jtbl->primary_key == 0) { goto WkVyB; } goto oKkP5; myOhp: Ydeie: goto I0qnq; I0qnq: kT5gH: goto PBWwY; zCnq7: goto S5eq_; goto fA7kO; fx1lC: S5eq_: goto PwjJA; PwjJA: $this->dbforge->modify_column($table, $field); goto wEwH3; BCDCV: $this->dbforge->modify_column($table, $field); goto UcaM3; jpeYn: if ($jtbl->default == "\103\x55\x52\x52\105\116\x54\x5f\124\111\x4d\x45\123\124\101\115\x50") { goto erSXy; } goto BuFW1; BuFW1: $field = array($jtbl->name => array("\x74\171\x70\x65" => $jtbl->type, "\143\x6f\156\x73\164\162\x61\151\156\x74" => $jtbl->max_length, "\x64\x65\146\x61\x75\x6c\164" => $jtbl->default)); goto zCnq7; UcaM3: goto tKED0; goto qy358; nLJVC: goto JyfgW; goto n2siL; fA7kO: erSXy: goto ykvn8; n2siL: OnG2o: goto HqWtd; PBWwY: Ahq51: goto t3ku5; ssMlI: if (!($jtbl->default != $ftbl->default || $jtbl->max_length != $ftbl->max_length || $jtbl->type != $ftbl->type)) { goto Ydeie; } goto NG2xr; ODvXL: $this->dbforge->add_key($jtbl->name, true); goto BCDCV; W_9b8: $field = array($jtbl->name => array("\164\171\160\x65" => $jtbl->type, "\143\x6f\156\x73\x74\x72\x61\x69\156\x74" => $jtbl->max_length, "\x6e\x75\154\154" => false)); goto nLJVC; LPCwo: JyfgW: goto ODvXL; wEwH3: tKED0: goto myOhp; HqWtd: $field = array($jtbl->name => array("\164\x79\160\145" => $jtbl->type, "\143\x6f\x6e\163\x74\162\x61\x69\x6e\x74" => $jtbl->max_length, "\x6e\x75\x6c\x6c" => false, "\x61\x75\x74\157\137\151\x6e\143\162\x65\155\145\156\164" => true)); goto LPCwo; cb3O7: $field = array($jtbl->name . "\x20\x64\x61\x74\145\x74\x69\x6d\145\40\x64\145\x66\141\x75\x6c\x74\40\x63\165\162\162\145\x6e\164\x5f\164\151\x6d\145\x73\x74\141\x6d\x70" . $onUpdate); goto fx1lC; hpVlo: if (!($jtbl->name == $ftbl->name)) { goto kT5gH; } goto ssMlI; ykvn8: $onUpdate = isset($jtbl->extra) ? "\x20" . strtolower($jtbl->extra) : ''; goto cb3O7; oKkP5: if ($jtbl->auto_increment == true) { goto OnG2o; } goto W_9b8; qy358: WkVyB: goto jpeYn; t3ku5: } goto OL_HZ; SsEBE: Qhv2Y: goto kvm16; yHRqm: $this->dbforge->add_column($table, $field); goto uynCS; rDpzF: VcaLF: goto qJ7jz; PQ3Ds: if ($jtbl->primary_key == 0) { goto Qhv2Y; } goto o4SqV; JHS7b: ZLe7w: goto YXwU8; uynCS: goto ZLe7w; goto SsEBE; c6N8c: $this->dbforge->add_column($table, $field); goto JHS7b; gQWYt: } goto DqeAU; DAH3u: if (!isset($json[$table])) { goto ctPjP; } goto NVSQj; oJJWS: goto ygWS_; goto ji0TF; yDzep: ygWS_: goto ES03j; ES03j: eh3e5: goto MQ3hd; rzw2b: letTS: goto O4r23; MQ3hd: } goto GsDwv; ots7M: $json = (array) $json; goto jaMuY; JaOob: sort($full_tables); goto bGBwz; WeNpb: echo true; goto kWw7D; wJEvU: NoqQQ: goto RYZkC; EHmVo: $tbl_ada = array_keys($fields); goto mbEhY; RYZkC: $json = file_get_contents("\x2e\57\x61\x73\x73\x65\164\x73\57\x61\160\x70\x2f\144\142\57\x64\x61\164\x61\x62\x61\x73\x65\56\x6a\163\x6f\x6e"); goto ExP9L; jaMuY: $tbl_baru = array_keys($json); goto EHmVo; jDglC: $fields = []; goto jjIwP; SQAN2: $tabless = $this->db->list_tables(); goto jDglC; ExP9L: $json = json_decode($json); goto ots7M; GsDwv: i0mOu: goto WeNpb; B_mEn: $full_tables = array_unique($full_tables); goto JaOob; kWw7D: } public function checkDb() { goto tO4A8; RQSpe: sort($full_tables); goto mAEQI; mAEQI: $create_tables = []; goto QdcMg; v4BDd: $this->db->db_debug = FALSE; goto MxbiG; eOvRE: $full_tables = array_merge($tbl_seharusnya, $tbl_ada); goto odwls; n8aal: $this->db->db_debug = $db_debug; goto sGc1u; bTD4t: $json = (array) $json; goto fFbip; NFAYE: $json = json_decode($json); goto bTD4t; nHTnt: $this->output_json($data); goto enm01; dQ5sP: $edit_columns = []; goto B0LBo; mhLdC: foreach ($full_tables as $table) { goto gDuyi; LYA52: $script .= $pri . "\x29\40\105\x4e\107\111\x4e\x45\x3d\x49\156\156\x6f\x44\x42\x20\x44\105\106\x41\125\114\x54\40\x43\110\101\122\x53\x45\x54\75\x75\x74\x66\70\x6d\142\64\x3b"; goto Kcn1Z; gDuyi: if (!$this->db->table_exists($table)) { goto JnEUs; } goto onXgp; M3txU: if (!(count($add_column) > 0)) { goto tKPcX; } goto Ikimx; YAVcP: $script_edit_column[$table] = "\101\114\x54\x45\x52\x20\x54\101\x42\114\105\40\x60" . $table . "\x60\40" . implode("\x2c\40", $modif_column) . "\73"; goto kygY5; ZXYmT: h1Fzr: goto LYA52; onXgp: if (!isset($json[$table])) { goto KysZl; } goto uZgxg; Br_Pv: $create_tables[] = $json[$table]; goto l3mxQ; scSXL: if (!(count($modif_column) > 0)) { goto Pfocd; } goto YAVcP; ePq32: foreach ($json[$table]->columns as $jtbl) { goto seseW; MCn4o: $default = $jtbl->default == null ? '' : "\x20\104\105\106\101\125\x4c\124\x20" . $jtbl->default; goto qsNEw; mbRsw: if (!(strtoupper($extra) == "\x20\x41\x55\124\x4f\x5f\x49\x4e\x43\x52\x45\115\105\x4e\124")) { goto Cy_Ro; } goto ALnkz; KT6FQ: jVCs2: goto e0A_e; xxT66: goto M9GQF; goto KELGH; ALnkz: $extra .= "\x20\x50\x52\111\x4d\101\x52\x59\40\x4b\105\x59"; goto Bsmb2; Bsmb2: Cy_Ro: goto xM2_r; P_JFO: JVbXn: goto KT6FQ; pdW5c: if ($jtbl->max_length == null) { goto u5xe9; } goto QIyZf; pAYSM: $length = ''; goto xxT66; qsNEw: $extra = $jtbl->extra == '' ? '' : "\x20" . strtoupper($jtbl->extra); goto mbRsw; a8eA1: zFcCG: goto QXXI8; DS1Fl: $length = ''; goto KNtDm; xeoJH: $length = "\50" . $jtbl->max_length . "\x29"; goto pOmOE; Ct0Jp: yRonU: goto OwvpR; pOmOE: goto nxDRT; goto Ct0Jp; fkZUu: nxDRT: goto vnGRP; KNtDm: goto M9GQF; goto HNUAw; hAS7V: array_push($add_column, "\101\104\x44\x20\x60" . $jtbl->name . "\x60\x20" . $jtbl->type . $length . $nullable . $default . $extra . $comment); goto a8eA1; QXXI8: foreach ($fields[$table]->columns as $ftbl) { goto Xbqsu; TDbHS: if (!($jtbl->extra != $ftbl->extra)) { goto njcfJ; } goto TtCCa; kWgFs: RR7Sb: goto pEKJM; lymW8: goto jYIp_; goto TLpUj; xFTIM: $jtbl->default = str_replace("\50\x29", '', $jtbl->default); goto uHmee; XBmTB: $edit_columns[$table][$jtbl->name]["\x63\157\155\155\145\156\x74"] = $jtbl->comment; goto bTcwL; aM2zr: $ftbl->default = str_replace("\50\x29", '', $ftbl->default); goto Dip4P; yAnsN: tLQMQ: goto R1jim; KBhtu: CPJeH: goto Ec0pT; DLKAe: jYIp_: goto CK_H6; nODIa: qLP7C: goto L53lN; mxS3u: qDIBj: goto TDbHS; b0cxm: $default = $jtbl->default == null ? '' : "\40\x44\x45\106\x41\125\x4c\124\40" . $jtbl->default; goto ejHzP; ywNHy: array_push($modif_column, "\115\117\104\x49\106\x59\x20\x60" . $jtbl->name . "\140\40" . $jtbl->col_type . $nullable . $default . $extra . $comment); goto eMal7; bTcwL: ZAsrb: goto imnp_; T0u0f: $jtbl->extra = strtoupper($jtbl->extra); goto jnI2T; FLnOk: if (!($jtbl->col_type != $ftbl->col_type)) { goto qLP7C; } goto jyMpD; HTvEf: lgT0x: goto wuLMP; eMal7: bshy2: goto Qf_Ny; uHmee: $jtbl->default = strtoupper($jtbl->default); goto cxeVD; pEKJM: array_push($modif_column, "\101\x44\104\x20\125\116\x49\121\125\105\40\x4b\x45\131\x20\x60" . $jtbl->name . "\x60\x20\50\140" . $jtbl->name . "\140\51"); goto DLKAe; MuN0E: if (!($jtbl->col_type != $ftbl->col_type || $jtbl->nullable != $ftbl->nullable || $jtbl->default != $ftbl->default || $jtbl->extra != $ftbl->extra || $jtbl->comment != $ftbl->comment)) { goto bshy2; } goto dzpW9; jyMpD: $edit_columns[$table][$jtbl->name]["\143\x6f\154\137\164\171\160\x65"] = $jtbl->col_type; goto nODIa; CK_H6: T5WB4: goto MuN0E; R1jim: if (!($jtbl->default != $ftbl->default)) { goto p3FOt; } goto oBhMk; ZULSX: p3FOt: goto mjv1h; QQkqz: $ftbl->extra = str_replace("\x28\51", '', $ftbl->extra); goto TGl_k; aD0fz: $edit_columns[$table][$jtbl->name]["\x70\x72\151\x6d\x61\x72\x79"] = $jtbl->primary; goto b70hP; Qf_Ny: veawm: goto HTvEf; Dip4P: $ftbl->default = strtoupper($ftbl->default); goto yAnsN; mjv1h: if (!($jtbl->extra != null)) { goto mEfyX; } goto sCU5p; imnp_: if (!($jtbl->primary != $ftbl->primary)) { goto T5WB4; } goto aD0fz; L53lN: if (!($jtbl->nullable != $ftbl->nullable)) { goto CPJeH; } goto bud0C; HAQ5s: if (strtolower($jtbl->primary) == "\x75\x6e\x69") { goto RR7Sb; } goto lymW8; uzYKG: if (!($ftbl->default != null)) { goto tLQMQ; } goto aM2zr; qD_x2: $comment = $jtbl->comment == '' ? '' : "\40\x43\x4f\x4d\x4d\x45\116\x54\x20\47" . $jtbl->comment . "\47"; goto ywNHy; Xbqsu: if (!($jtbl->name == $ftbl->name)) { goto veawm; } goto FLnOk; cxeVD: lCBNP: goto uzYKG; dzpW9: $nullable = $jtbl->nullable == "\116\x4f" ? "\40\x4e\117\x54\40\x4e\x55\114\114" : ''; goto b0cxm; oBhMk: $edit_columns[$table][$jtbl->name]["\x64\x65\146\x61\165\154\164"] = $jtbl->default; goto ZULSX; TLpUj: Qyifb: goto C1sUt; ejHzP: $extra = $jtbl->extra == '' ? '' : "\x20" . strtoupper($jtbl->extra); goto qD_x2; bud0C: $edit_columns[$table][$jtbl->name]["\156\165\x6c\x6c\x61\142\x6c\x65"] = $jtbl->nullable; goto KBhtu; naq_d: njcfJ: goto K7WYN; Ec0pT: if (!($jtbl->default != null)) { goto lCBNP; } goto xFTIM; b70hP: if (strtolower($jtbl->primary) == "\x70\162\x69") { goto Qyifb; } goto HAQ5s; sCU5p: $jtbl->extra = str_replace("\x28\x29", '', $jtbl->extra); goto T0u0f; TtCCa: $edit_columns[$table][$jtbl->name]["\x65\170\164\x72\x61"] = $jtbl->extra; goto naq_d; K7WYN: if (!($jtbl->comment != $ftbl->comment)) { goto ZAsrb; } goto XBmTB; X0Hmr: if (!($ftbl->extra != null)) { goto qDIBj; } goto QQkqz; CuGhF: goto jYIp_; goto kWgFs; C1sUt: array_push($modif_column, "\101\x44\x44\40\x50\122\x49\x4d\101\x52\x59\40\113\x45\131\40\x28\140" . $jtbl->name . "\x60\51"); goto CuGhF; jnI2T: mEfyX: goto X0Hmr; TGl_k: $ftbl->extra = strtoupper($ftbl->extra); goto mxS3u; wuLMP: } goto P_JFO; bU5yK: $add_columns[$table][] = $jtbl; goto pdW5c; HNUAw: u5xe9: goto pAYSM; OwvpR: $length = "\x28" . ($jtbl->max_length + 1) . "\x29"; goto fkZUu; vnGRP: M9GQF: goto oOh6j; WJrSJ: if ($jtbl->type == "\151\156\164") { goto yRonU; } goto xeoJH; QIyZf: if ($jtbl->type != "\x6c\157\156\147\x74\x65\170\164" && $jtbl->type != "\155\x65\144\x69\x75\x6d\x74\x65\170\164" && $jtbl->type != "\x74\145\x78\164") { goto x_aJc; } goto DS1Fl; oOh6j: $nullable = $jtbl->nullable == "\x4e\x4f" ? "\40\116\x4f\x54\40\x4e\125\114\114" : ''; goto MCn4o; KELGH: x_aJc: goto WJrSJ; xM2_r: $comment = $jtbl->comment == '' ? '' : "\40\x43\x4f\x4d\115\x45\x4e\124\x20\x27" . $jtbl->comment . "\x27"; goto hAS7V; seseW: if ($this->db->field_exists($jtbl->name, $table)) { goto zFcCG; } goto bU5yK; e0A_e: } goto amVQv; qc0Es: foreach ($json[$table]->columns as $column) { goto MZUdf; GvvlE: $length = "\x28" . $column->max_length . "\x29"; goto WfjWR; EquKD: $length = "\50" . ($column->max_length + 1) . "\x29"; goto SOvJR; jg8xk: mH75p: goto EquKD; SOvJR: j5ifl: goto wXI5A; Y66XV: goto w5LfH; goto UW2qg; pY0Bq: S_nUM: goto MAvSr; wXI5A: w5LfH: goto ktMYL; WfjWR: goto j5ifl; goto jg8xk; stir4: jTU82: goto sngBm; E0GgU: $default = $column->default == null ? '' : "\x20\x44\x45\x46\x41\125\114\124\40" . $column->default; goto vG1bI; tGor4: $script .= "\140" . $column->name . "\x60\40" . $column->type . $length . $nullable . $default . $extra . $comment . "\54\x20"; goto CkjAa; L_9J9: goto w5LfH; goto pY0Bq; MAvSr: if ($column->type == "\151\156\x74") { goto mH75p; } goto GvvlE; cI2Qe: $comment = $column->comment == '' ? '' : "\40\x43\117\x4d\115\105\116\124\40\x27" . $column->comment . "\x27"; goto tGor4; cxadw: $length = ''; goto L_9J9; UW2qg: ZzZUx: goto cxadw; LdfOo: if ($column->type != "\x6c\x6f\x6e\x67\x74\x65\x78\x74" && $column->type != "\155\145\144\x69\x75\x6d\x74\145\x78\x74" && $column->type != "\164\x65\170\x74") { goto S_nUM; } goto o3X7x; o3X7x: $length = ''; goto Y66XV; ktMYL: $nullable = $column->nullable == "\116\117" ? "\x20\x4e\117\124\x20\116\125\x4c\x4c" : ''; goto E0GgU; CkjAa: $pri .= $column->primary != '' ? "\x50\x52\111\x4d\x41\122\131\x20\113\105\131\40\x28\x60" . $column->name . "\140\51" : ''; goto stir4; vG1bI: $extra = $column->extra == '' ? '' : "\40" . strtoupper($column->extra); goto cI2Qe; MZUdf: if ($column->max_length == null) { goto ZzZUx; } goto LdfOo; sngBm: } goto ZXYmT; l3mxQ: $script = "\x43\122\105\101\124\105\40\124\x41\x42\114\105\40\140" . $table . "\x60\40\x28"; goto wu26V; PePMv: goto oN3GN; goto Iw9MM; wu26V: $pri = ''; goto qc0Es; amVQv: cA76n: goto M3txU; cUHJN: $modif_column = []; goto ePq32; Iw9MM: JnEUs: goto Br_Pv; ZwogY: tKPcX: goto scSXL; Ikimx: $script_create_column[$table] = "\x41\x4c\x54\105\122\x20\124\101\x42\114\x45\40\x60" . $table . "\140\x20" . implode("\54\40", $add_column) . "\73"; goto ZwogY; jcVo3: oN3GN: goto td0oy; uZgxg: $add_column = []; goto cUHJN; kygY5: Pfocd: goto kwKH5; td0oy: Ma6ul: goto WRZcR; Kcn1Z: $script_create_table[$table] = $script; goto jcVo3; kwKH5: KysZl: goto PePMv; WRZcR: } goto alLtw; lYrWU: $fields = []; goto YrOz4; IniNw: $tbl_ada = array_keys($fields); goto eOvRE; alLtw: GloZS: goto n8aal; fFbip: $tbl_seharusnya = array_keys($json); goto IniNw; hGcnh: $script_create_column = []; goto dQ5sP; ZqHMj: $json = file_get_contents("\x2e\57\x61\x73\163\x65\x74\x73\x2f\x61\x70\x70\57\144\142\57\144\x61\x74\x61\x62\141\x73\145\56\152\163\x6f\x6e"); goto NFAYE; O35cW: ma0cm: goto ZqHMj; fa1BJ: $add_columns = []; goto hGcnh; B0LBo: $script_edit_column = []; goto mhLdC; odwls: $full_tables = array_unique($full_tables); goto RQSpe; MxbiG: $tabless = $this->db->list_tables(); goto lYrWU; QdcMg: $script_create_table = []; goto fa1BJ; tO4A8: $db_debug = $this->db->db_debug; goto v4BDd; sGc1u: $data = ["\146\x69\145\154\144\163" => $fields, "\x63\162\x65\141\164\x65\x5f\164\141\142\x6c\145\163" => $create_tables, "\143\x6f\165\x6e\x74\x5f\x74\142\154" => count($create_tables), "\x61\x64\x64\x5f\143\157\x6c\165\x6d\x6e\x73\137\164\x6f\137\x74\141\142\x6c\x65" => $add_columns, "\x63\157\x75\x6e\x74\x5f\143\x6f\154" => count($add_columns), "\x65\144\x69\x74\x5f\x63\x6f\x6c\165\155\156\163" => $edit_columns, "\143\157\x75\x6e\164\x5f\155\157\x64" => count($edit_columns), "\141\x64\144\x5f\x74\x62\x6c" => $this->encryption->encrypt(json_encode($script_create_table)), "\x61\144\144\137\143\157\x6c" => $this->encryption->encrypt(json_encode($script_create_column)), "\x6d\157\144\x5f\x63\x6f\154" => $this->encryption->encrypt(json_encode($script_edit_column))]; goto nHTnt; YrOz4: foreach ($tabless as $table) { goto xwyrR; wEhpP: $retval[$i]->max_length = $query[$i]->character_maximum_length > 0 ? $query[$i]->character_maximum_length : $query[$i]->numeric_precision; goto ZLpn2; ggvnW: $retval[$i]->extra = $query[$i]->extra; goto WCJ7o; xwyrR: $sql = "\123\105\x4c\105\x43\124\40\140\143\x6f\x6c\x75\155\x6e\137\x6e\141\155\145\x60\54\40\140\x63\157\x6c\165\155\156\x5f\x74\171\160\145\x60\54\40\x60\143\157\154\154\x61\164\151\157\x6e\x5f\x6e\141\155\x65\x60\x2c\40\x60\x64\x61\164\141\x5f\x74\171\160\145\140\54\x20\x60\143\x68\141\x72\x61\143\x74\145\x72\137\155\141\x78\151\155\165\x6d\x5f\x6c\x65\156\147\x74\150\140\54\40\140\x6e\165\x6d\x65\x72\x69\143\x5f\x70\x72\145\143\151\163\x69\x6f\156\140\x2c" . "\x20\140\x63\x6f\154\165\x6d\156\x5f\144\x65\146\141\x75\154\x74\x60\54\x20\140\x63\157\154\165\x6d\x6e\x5f\153\145\171\x60\x2c\x20\x60\143\157\x6c\x75\x6d\x6e\137\143\x6f\155\155\145\156\x74\x60\54\40\x60\x65\x78\x74\x72\141\x60\54\40\x60\151\163\x5f\156\165\x6c\x6c\141\x62\x6c\x65\140\xa\11\11\x9\106\122\x4f\x4d\40\x60\x69\156\146\157\162\x6d\x61\x74\151\157\156\137\163\143\x68\x65\155\x61\140\x2e\x60\143\157\154\x75\x6d\156\163\140\x20\x57\110\x45\x52\105\x20\164\x61\x62\x6c\x65\x5f\163\143\150\x65\x6d\141\40\75\40\42" . $this->db->database . "\42\40\x41\x4e\x44\x20\164\x61\x62\154\145\x5f\x6e\141\x6d\x65\x20\x3d\x20\42" . $table . "\42"; goto eGKAG; YdHWA: $i = 0; goto NBNzt; h0H4_: $retval[$i]->col_type = $query[$i]->column_type; goto twp7T; jNP7S: $fields = FALSE; goto SQSna; NBNzt: $c = count($query); goto moATR; twp7T: $retval[$i]->type = $query[$i]->data_type; goto j2oXX; JRgyH: $retval[$i]->primary = $query[$i]->column_key; goto bWnq5; W82I2: $query = $query->result_object(); goto L1yPP; HnUES: $i++; goto JwdFM; oQ2Gf: $retval[$i]->name = $query[$i]->column_name; goto h0H4_; L1yPP: $retval = array(); goto YdHWA; MbS1o: $fields[$table] = (object) ["\x74\x61\x62\154\x65\137\x6e\141\x6d\145" => $table, "\143\157\x6c\165\155\156\163" => $retval]; goto c0Rms; B8K9k: IJ8h9: goto MbS1o; eGKAG: if (!(($query = $this->db->query($sql)) === FALSE)) { goto EQdZ0; } goto jNP7S; moATR: mMD1K: goto DngOd; JwdFM: goto mMD1K; goto B8K9k; j2oXX: $retval[$i]->collation = $query[$i]->collation_name; goto wEhpP; DngOd: if (!($i < $c)) { goto IJ8h9; } goto QHS94; bWnq5: dBtU9: goto HnUES; a1WNL: $retval[$i]->comment = $query[$i]->column_comment; goto ggvnW; SQSna: EQdZ0: goto W82I2; WCJ7o: $retval[$i]->nullable = $query[$i]->is_nullable; goto JRgyH; QHS94: $retval[$i] = new stdClass(); goto oQ2Gf; ZLpn2: $retval[$i]->default = $query[$i]->column_default; goto a1WNL; c0Rms: AaaZw: goto j2SXJ; j2SXJ: } goto O35cW; enm01: } public function createTable() { goto NOegY; w9S6m: sleep(1); goto C2Eo8; JDosF: str_replace("\x25\62\102", "\53", $scripts); goto w9S6m; ekJVP: $data["\x6d\145\x73\x73\141\147\x65"] = "\125\x70\x64\x61\x74\145\40\153\157\154\157\x6d"; goto Oec4X; AQth6: foreach ($scripts as $script) { $queries .= $script; ERlUf: } goto goeVY; Oec4X: $this->output_json($data); goto nEFk6; GjHVf: $queries = ''; goto AQth6; goeVY: DgdrH: goto wCxcK; C2Eo8: $scripts = json_decode($this->encryption->decrypt($scripts)); goto GjHVf; NOegY: $scripts = $this->input->post("\144\141\x74\x61", true); goto JDosF; wCxcK: $data["\163\x75\143\x63\x65\x73\163"] = $this->runQuery($queries); goto ekJVP; nEFk6: } public function createColumn() { goto qq7O6; tfe_K: $data["\155\145\x73\x73\141\x67\x65"] = "\115\157\144\151\x66\x79\40\153\157\154\x6f\x6d"; goto J9bOY; Y11zz: $this->updateUID(); goto LtdHu; BUgKF: $data["\163\x75\143\143\x65\x73\163"] = $this->runQuery($queries); goto tfe_K; COjfT: str_replace("\x25\x32\102", "\53", $scripts); goto sIgEj; sIgEj: sleep(1); goto vkbaS; vkbaS: $scripts = json_decode($this->encryption->decrypt($scripts)); goto u4YTj; LtdHu: GcG3N: goto BUgKF; UlmRl: foreach ($scripts as $script) { $queries .= $script; bvyLd: } goto Biolc; Biolc: yTuIU: goto gU_BH; u4YTj: $queries = ''; goto UlmRl; qq7O6: $scripts = $this->input->post("\x64\141\x74\x61", true); goto COjfT; J9bOY: $this->output_json($data); goto a9C_U; gU_BH: if (!(strpos("\140\165\151\x64\140", $queries) !== false)) { goto GcG3N; } goto Y11zz; a9C_U: } public function editColumn() { goto J5Ykj; hZiPE: $queries = ''; goto EAgCl; J5Ykj: $scripts = $this->input->post("\144\141\164\x61", true); goto ViteO; kzlWu: sleep(1); goto MevaX; whRnq: $this->output_json($data); goto nso1s; B8zcI: $data["\x6d\145\x73\163\x61\147\145"] = "\125\x70\144\141\x74\145\40\x73\145\x6c\x65\163\141\151"; goto whRnq; ViteO: str_replace("\45\x32\102", "\x2b", $scripts); goto kzlWu; EAgCl: foreach ($scripts as $script) { $queries .= $script; Q4o_U: } goto YXckr; d764S: $data["\163\165\x63\x63\x65\163\x73"] = $this->runQuery($queries); goto B8zcI; MevaX: $scripts = json_decode($this->encryption->decrypt($scripts)); goto hZiPE; YXckr: sWl1w: goto d764S; nso1s: } function runQuery($script) { goto FwQnB; ye5Eo: return true; goto u0Gn_; vA7eV: return mysqli_connect_errno(); goto u1xl6; aCyvH: $mysqli->close(); goto ye5Eo; QV0Dn: $database = $this->db->database; goto MsWEs; loEln: $hostpass = $this->db->password; goto QV0Dn; w2Lma: $mysqli->multi_query($script); goto aCyvH; MsWEs: $mysqli = new mysqli($hostname, $hostuser, $hostpass, $database); goto AQx9U; AQx9U: if (!mysqli_connect_errno()) { goto hS2Tf; } goto vA7eV; FwQnB: $hostname = $this->db->hostname; goto lzzWe; lzzWe: $hostuser = $this->db->username; goto loEln; u1xl6: hS2Tf: goto w2Lma; u0Gn_: } function updateUID() { goto vHW60; vHW60: $this->load->library("\x55\x75\151\x64", "\x75\x75\151\x64"); goto V9a3c; R9HTL: OwJV_: goto gPub7; gPub7: return $this->db->update_batch("\155\x61\x73\164\x65\162\137\x73\x69\x73\167\x61", $input, "\x69\144\x5f\163\151\x73\x77\141"); goto wqDjH; gD8Pa: $input = array(); goto hqUgP; hqUgP: foreach ($siswas as $siswa) { $input[] = array("\151\x64\x5f\x73\x69\163\x77\141" => $siswa->id_siswa, "\x75\151\x64" => $this->uuid->v4()); Kk8GH: } goto R9HTL; V9a3c: $siswas = $this->db->get("\155\141\x73\x74\145\162\x5f\163\x69\163\x77\x61")->result(); goto gD8Pa; wqDjH: } function make_base() { } }
